static_resources:
  listeners:
  # Outbound network traffic listener.
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 15001
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config: 
          '@type': "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
          stat_prefix: outbound_proxy
          upgrade_configs:
          - upgrade_type: websocket
          forward_client_cert_details: ALWAYS_FORWARD_ONLY
          route_config: 
            name: all
            virtual_hosts:
              - name: outbound-pass-through 
                domains: 
                  - '*'
                routes:
                  - match: { prefix: "/"}
                    route:                  
                      cluster: outbound-pass-through 
                      timeout: 300s
          http_filters:
          - name: envoy.filters.http.dynamic_forward_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig
              dns_cache_config:
                name: dynamic_forward_proxy_cache_config
                dns_lookup_family: V4_ONLY
          - name: envoy.filters.http.router    
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
  clusters:
  - name: outbound-pass-through
    lb_policy: CLUSTER_PROVIDED
    cluster_type:
      name: envoy.clusters.dynamic_forward_proxy
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig
        dns_cache_config:
          name: dynamic_forward_proxy_cache_config
          dns_lookup_family: V4_ONLY
    transport_socket:
      name: envoy.transport_sockets.att_tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.att_tls.v3.UpstreamAttTlsContext
        attested_tls_context:
          validation_context:
            attestation_service_trusted_keys:
              filename: attestation-service-key.pem
            attestation_policy: $ATTESTATION_POLICY
        upstream_tls_context:
          common_tls_context:
            tls_params:
              tls_minimum_protocol_version: TLSv1_3
              tls_maximum_protocol_version: TLSv1_3
            validation_context:
              trust_chain_verification: ACCEPT_UNTRUSTED
